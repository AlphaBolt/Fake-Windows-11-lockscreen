<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="wifi_pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAKTSURBVFhH7ZZN
        SBVRGIavKZYukiyiAs2IWigYlWW4yUCQsh9oIy1aJARtCvqBikIICloEQRCBRItyES1SjIJctA0hyH7U
        alGLXAQFgWkFadfnnfvdce7cOTp1vYLgAw/c+b7vnDP3zJxzJrHAvCKZTC7HRjyKF/CqeRGPYROusvLZ
        gQ634DV8g38xDu/wBjZggXUVHxoV4SF8ibkyiEew2LqfHgo1xfq3Ln7iK3yCD0z9fo3KuXiPzTZMNiRL
        8JYqI+jHs1iHhdYkC3KauW14HnWTUdzBUmuSgkAlhhvoeXdhvZX9M7Tdgd0Y5i2uTRdV42dFAwzgTq/A
        AXn92zVYgYstHAn5Xah3Icgw1ig55F1O0YEl1taH2Epsw4f4BcMr4hv24nGssmY+xErxNgYZVOJT6rfX
        4Wmr9yG2Hu/hH4yL+nqMW60bH2JnLC8+KrAJb2KL1XhwvQjP4S/8XyZQ+8ES69aD6xbUmLUWyoSEpusR
        hvmNmuaTuA+3o976vXgCtRyjluILjLdDUliIz9QqwBhqyy23MifULMV2/I5BPmCZlbmhaKNXPoXuvtLS
        saHNCnyqDgLst7QbirS80jNwFzNWBNcFWI+XsRN7UBvYYVxmZR5cazav4DjqfMjIT0tUMTE97+fo4gfq
        lMzY97nWY3HuoLGgg4MYd0VoBmd+3nGhs82oJRVE+4IOrT4Mv3DivjXPHTprTfXpoeep5++vCH7rWWtZ
        6sRL02/p3KEznZQ6mHRG7LZwFuTKUC+mbmSPhfMDA+imDqDe/goLzw0MuBq1rNKM4sxrfLZgMH1UhPmK
        RVaSXxjI9cm2wUryCwNFfeVoj8j6jsgLDFSLIxo1wClLzw0MuA4v4XVssvAC841EYhLFa2CVyW6aFQAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="battery_pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADSSURBVFhH7dYx
        CsIwFMbxeALBwR5BLyOeQvQA6h2k19BRVwfBOwg6CrrppE5OGv8vbQehSyA1Bd8HP2gCSR605NVoNJpa
        xFrbxwKbiq2RIsmPdocPIdmjbFFIW9xxRrMo4IglGm6i4nBOBy+Miok3xmhh58tt4hnWXZEWA4kUkGSP
        fnGbeIZlF2gBN0xjFiB5xi7A/n0BUV+BfISTmAXU5x6IfhVLM1rhV82oi69mNIDkgLIWGpK04wdOyNqx
        hEEPc5QtCkl+SGZo50drNJrYMeYDDq8+spD9fCsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="unlock_pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>